name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout Code
        uses: actions/checkout@v4

      # Setup Node.js for frontend
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # Install & test frontend
      - name: Frontend Install & Test
        working-directory: ./frontend
        run: |
          npm install
          npm test -- --watchAll=false

      # Setup Python for backend
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Install & test backend
      - name: Backend Install & Test
        working-directory: ./backend
        run: |
          pip install -r requirements.txt
          pytest --maxfail=1 --disable-warnings --cov=.

      # Login to DockerHub
      - name: DockerHub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build & push backend image
      - name: Build & Push Backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      # Build & push frontend image
      - name: Build & Push Frontend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

      # Setup kubectl
      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: 'latest'

      # Setup Kubeconfig (saved in GitHub Secrets)
      - name: Configure kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config

      # Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f week6/k8s/namespace.yaml
          kubectl apply -f week6/k8s/backend-deployment.yaml
          kubectl apply -f week6/k8s/frontend-deployment.yaml
