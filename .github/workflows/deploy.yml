name: CI/CD Pipeline

on:
  push:
    branches:
      - main # Runs on pushes to main branch
  pull_request:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    env:
      REGISTRY: docker.io
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Set up Docker
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PASS }}

      # 3. Build Backend
      - name: Build Backend Docker image
        working-directory: week6/backend
        run: |
          docker build -t $REGISTRY/${{ env.DOCKER_USER }}/week6-backend:latest .

      # 4. Build Frontend
      - name: Build Frontend Docker image
        working-directory: week6/frontend
        run: |
          docker build -t $REGISTRY/${{ env.DOCKER_USER }}/week6-frontend:latest .

      # 6. Install dependencies for testing
      - name: Install backend test dependencies
        working-directory: week6/backend
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov requests-mock

      - name: Run backend tests
        working-directory: week6/backend
        run: pytest --maxfail=1 --disable-warnings --cov=.

      - name: Install frontend test dependencies
        working-directory: week6/frontend
        run: npm install

      - name: Run frontend tests
        working-directory: week6/frontend
        run: npm test -- --watchAll=false

      # 7. Deploy to Kubernetes
      - name: Set up kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: "v1.32.2"

      - name: Configure Kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ env.KUBE_CONFIG }}" > ~/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f week6/k8s/
